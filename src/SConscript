Import('env', 'host_env')
import os
 
env.Command('fsdyn_version.c', [],
            """echo 'const char *fsdyn_version_tag = \
    "F-S_v:: fsdyn 1.0.%s";' >$TARGET""" % os.getenv("BUILD_NUMBER", "9999"))

env['CCFLAGS'] += ' -fPIC'      # make objects usable for shared libs
 
env['CPPPATH'] = [ '#include' ]
host_env['CPPPATH'] = [ '#include', '.' ]
 
env.ParseConfig(env['CONFIG_PARSER'])

env.StaticLibrary('fsdyn',
                  [ 'avltree.c',
                    'fsdyn_version.c',
                    'bytearray.c',
                    'date.c',
                    'float.c',
                    'float_format.c',
                    'hashtable.c',
                    'idna_table.c',
                    'integer.c',
                    'intset.c',
                    'list.c',
                    'base64.c',
                    'charstr.c',
                    'charstr_puny.c',
                    'charstr_unicode.c',
                    'charstr_decompose.c',
                    'charstr_recompose.c',
                    'charstr_grapheme.c',
                    'fsalloc.c',
                    'priority_queue.c',
                    'unicode_categories.c',
                    'unicode_lower_case.c',
                    'unicode_upper_case.c',
                    "unicode_canonical_combining_classes.c",
                    "unicode_allowed_in_normal_form.c",
                    "unicode_decomposition.c",
                    "unicode_recomposition.c",
                    "unicode_grapheme_break_table.c",
                    "unicode_emoji_table.c" ])

env.Install("host",
            [ "bytearray.c",
              "charstr.c",
              "intset.c",
              "list.c",
              "fsalloc.c",
              "fsdyn_version.c" ])

host_env.Program("gen_idna_table",
                 [ "gen_idna_table.c",
                   "host/charstr.c",
                   "host/list.c",
                   "host/bytearray.c",
                   "host/fsalloc.c",
                   'host/fsdyn_version.c' ])

env.Command("idna_table.c",
            [ "gen_idna_table",
              "#idna/IdnaMappingTable.txt" ],
            """$SOURCES >$TARGET""")

host_env.Program("gen_grapheme_break_property",
                 [ "gen_grapheme_break_property.c",
                   "host/charstr.c",
                   "host/intset.c",
                   "host/list.c",
                   "host/bytearray.c",
                   "host/fsalloc.c",
                   'host/fsdyn_version.c' ])

env.Command("unicode_grapheme_break_table.c",
            [ "gen_grapheme_break_property",
              "#unicode/auxiliary/GraphemeBreakProperty.txt" ],
            """$SOURCES >$TARGET""")

host_env.Program("gen_emoji_property",
                 [ "gen_emoji_property.c",
                   "host/charstr.c",
                   "host/intset.c",
                   "host/list.c",
                   "host/bytearray.c",
                   "host/fsalloc.c",
                   'host/fsdyn_version.c' ])

env.Command("unicode_emoji_table.c",
            [ "gen_emoji_property",
              "#unicode/emoji/emoji-data.txt" ],
            """$SOURCES >$TARGET""")

env.Command("unicode_categories.c",
            [ "categorize.py",
              "#unicode/UnicodeData.txt" ],
            """$SOURCES >$TARGET""")

host_env.Program("gen_lower_case_table",
                 [ "gen_lower_case_table.c",
                   "host/charstr.c",
                   "host/list.c",
                   "host/bytearray.c",
                   "host/fsalloc.c",
                   'host/fsdyn_version.c' ])

env.Command("unicode_lower_case.c",
            [ "gen_lower_case_table",
              "#unicode/UnicodeData.txt" ],
            """$SOURCES >$TARGET""")

env.Command("unicode_upper_case.c",
            [ "upper_case.py",
              "#unicode/UnicodeData.txt" ],
            """$SOURCES >$TARGET""")

host_env.Program("gen_canonical_combining_classes_table",
                 [ "gen_canonical_combining_classes_table.c",
                   "host/charstr.c",
                   "host/list.c",
                   "host/bytearray.c",
                   "host/fsalloc.c",
                   'host/fsdyn_version.c' ])

env.Command("unicode_canonical_combining_classes.c",
            [ "gen_canonical_combining_classes_table",
              "#unicode/UnicodeData.txt" ],
            """$SOURCES >$TARGET""")

env.Command("unicode_allowed_in_normal_form.c",
            [ "allowed_in_normal_form.py",
              "#unicode/DerivedNormalizationProps.txt" ],
            """$SOURCES >$TARGET""")

env.Command("unicode_decomposition.c",
            [ "decomposition.py",
              "#unicode/UnicodeData.txt" ],
            """$SOURCES >$TARGET""")

env.Command("unicode_recomposition.c",
            [ "recomposition.py",
              "#unicode/UnicodeData.txt",
              "#unicode/CompositionExclusions.txt" ],
            """$SOURCES >$TARGET""")
